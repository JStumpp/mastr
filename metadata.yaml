databases:
    Marktstammdatenregister:
        tables:
            EinheitenSolar:
                plugins:
                    datasette-cluster-map:
                        "latitude_column": Breitengrad
                        "longitude_column": Laengengrad
            Katalogkategorien:
                label_column: Name
            Katalogwerte:
                label_column: Wert
        queries:
            NachNettonennleistung:
                title: Photovoltaikanlagen im gegebenen Ort, sortiert nach Nettonennleistung
                sql: |-
                    select
                      Nettonennleistung,
                      Bruttoleistung,
                      AnzahlModule,
                      Firmenname,
                      NameStromerzeugungseinheit,
                      Inbetriebnahmedatum,
                      EinheitSystemstatus,
                      EinheitBetriebsstatus,
                      EinheitMastrNummer,
                      AnlagenbetreiberMastrNummer,
                      EegMaStRNummer,
                      Laengengrad as longitude,
                      Breitengrad as latitude
                    from
                      EinheitenSolar e
                      join Marktakteure m on e.AnlagenbetreiberMastrNummer = m.MastrNummer
                    where
                      e.Ort = :Ort
                      and DatumEndgueltigeStilllegung = ''
                    order by
                      e.Nettonennleistung desc
            LeistungMonatlichGesamt:
                title: Monatliche Entwicklung der Nettonennleistung in ganz Deutschland
                sql: |-
                    with per_month_started as (
                      select
                        substr(Inbetriebnahmedatum, 0, 8) as Monat,
                        sum(Nettonennleistung) as Leistung
                      from
                        EinheitenSolar
                      where
                        Inbetriebnahmedatum != ''
                      group by
                        substr(Inbetriebnahmedatum, 0, 8)
                    ),
                    per_month_retired as (
                      select
                        substr(DatumEndgueltigeStilllegung, 0, 8) as Monat,
                        sum(Nettonennleistung) as Leistung
                      from
                        EinheitenSolar
                      where
                        DatumEndgueltigeStilllegung != ''
                      group by
                        substr(DatumEndgueltigeStilllegung, 0, 8)
                    ),
                    months as (
                      select
                        Monat
                      from
                        per_month_started
                      union
                      select
                        Monat
                      from
                        per_month_retired
                    ),
                    per_month_cumulative as (
                      select
                        m.Monat,
                        sum(s.Leistung - r.Leistung) over (
                          order by
                            m.Monat
                        ) as Leistung,
                        s.Leistung as Leistung_neuInBetrieb,
                        r.Leistung as Leistung_stillgelegt
                      from
                        months m
                        left join per_month_started s on (m.Monat = s.Monat)
                        left join per_month_retired r on (m.Monat = r.Monat)
                    )
                    select
                      *
                    from
                      per_month_cumulative
                    where
                      Monat > '2010-00';

    #osm:
    #    queries:
    #        by_administrative_boundary:
    #            title: Search by administrative boundary
    #            description_html: |-
    #                <p>The results are sorted by building area. Places of worship like chapels are excluded from the results.
    #
    #                <table>
    #                <caption>Parameters</caption>
    #                <tr>
    #                <td><code>boundary_name</code></td>
    #                <td>The name of the administrative boundary, e.g. the name of a town.</td>
    #                </tr>
    #                <tr>
    #                <td><code>limit</code></td>
    #                <td>The number of results to show.</td>
    #                </tr>
    #                </table>
    #            sql: |-
    #                select
    #                  AsGeoJSON(GEOMETRY) as geojson,
    #                  CAST(area as INTEGER) as area_sqm,
    #                  operator,
    #                  name,
    #                  amenity,
    #                  building,
    #                  other_tags,
    #                  ogc_fid,
    #                  Y(Centroid(GEOMETRY)) as latitude,
    #                  X(Centroid(GEOMETRY)) as longitude
    #                from
    #                  multipolygons,
    #                  (
    #                    select
    #                      GEOMETRY as query_boundary
    #                    from
    #                      multipolygons
    #                    where
    #                      name == :boundary_name
    #                      AND boundary == "administrative"
    #                    limit
    #                      1
    #                  )
    #                where
    #                  building is not null
    #                  and building != "church"
    #                  and building != "chapel"
    #                  and building != "mosque"
    #                  and building != "synagogue"
    #                  and building != "temple"
    #                  and within(GEOMETRY, query_boundary)
    #                order by
    #                  area desc
    #                limit cast(:limit as INT)
