databases:
    Marktstammdatenregister:
        tables:
            EinheitSolar:
                plugins:
                    datasette-cluster-map:
                        latitude_column: Breitengrad
                        longitude_column: Laengengrad
            EinheitStromSpeicher:
                plugins:
                    datasette-cluster-map:
                        latitude_column: Breitengrad
                        longitude_column: Laengengrad
            EinheitWasser:
                plugins:
                    datasette-cluster-map:
                        latitude_column: Breitengrad
                        longitude_column: Laengengrad
            EinheitWind:
                plugins:
                    datasette-cluster-map:
                        latitude_column: Breitengrad
                        longitude_column: Laengengrad
            Katalogkategorie:
                label_column: Name
                # Datasette >0.58.1 fails if 'hidden: true' is set.
                #hidden: true
            Katalogwert:
                label_column: Wert
                # Datasette >0.58.1 fails if 'hidden: true' is set.
                #hidden: true
            sqlite_stat1:
                hidden: true
        queries:
            NachNettonennleistung:
                title: Photovoltaikanlagen im gegebenen Ort, sortiert nach Nettonennleistung
                hide_sql: true
                sql: |-
                    select
                      Nettonennleistung,
                      Bruttoleistung,
                      AnzahlModule,
                      Firmenname,
                      NameStromerzeugungseinheit,
                      Inbetriebnahmedatum,
                      EinheitSystemstatus,
                      EinheitBetriebsstatus,
                      EinheitMastrNummer,
                      AnlagenbetreiberMastrNummer,
                      EegMaStRNummer,
                      Laengengrad as longitude,
                      Breitengrad as latitude
                    from
                      EinheitSolar e
                      join Marktakteur m on e.AnlagenbetreiberMastrNummer = m.MastrNummer
                    where
                      e.Ort = :Ort
                      and DatumEndgueltigeStilllegung = ''
                    order by
                      e.Nettonennleistung desc
            SolarMonatlichGesamt:
                title: Monatliche Entwicklung der Nettonennleistung (Solar) in ganz Deutschland
                hide_sql: true
                sql: |-
                    with per_month_started as (
                      select
                        substr(Inbetriebnahmedatum, 0, 8) as Monat,
                        sum(Nettonennleistung) as Leistung
                      from
                        EinheitSolar
                      where
                        Inbetriebnahmedatum != ''
                      group by
                        Monat
                    ),
                    per_month_retired as (
                      select
                        substr(DatumEndgueltigeStilllegung, 0, 8) as Monat,
                        sum(Nettonennleistung) as Leistung
                      from
                        EinheitSolar
                      where
                        DatumEndgueltigeStilllegung != ''
                      group by
                        Monat
                    ),
                    months as (
                      select
                        Monat
                      from
                        per_month_started
                      union
                      select
                        Monat
                      from
                        per_month_retired
                    ),
                    per_month_cumulative as (
                      select
                        m.Monat,
                        sum(s.Leistung - r.Leistung) over (
                          order by
                            m.Monat
                        ) as Leistung,
                        s.Leistung as Leistung_neuInBetrieb,
                        r.Leistung as Leistung_stillgelegt
                      from
                        months m
                        left join per_month_started s on (m.Monat = s.Monat)
                        left join per_month_retired r on (m.Monat = r.Monat)
                    )
                    select
                      *
                    from
                      per_month_cumulative
                    where
                      Monat > '2010-00';
            WindMonatlichGesamt:
                title: Monatliche Entwicklung der Nettonennleistung (Wind) in ganz Deutschland
                hide_sql: true
                sql: |-
                    with per_month_started as (
                      select
                        substr(Inbetriebnahmedatum, 0, 8) as Monat,
                        sum(Nettonennleistung) as Leistung
                      from
                        EinheitWind
                      where
                        Inbetriebnahmedatum != ''
                      group by
                        substr(Inbetriebnahmedatum, 0, 8)
                    ),
                    per_month_retired as (
                      select
                        substr(DatumEndgueltigeStilllegung, 0, 8) as Monat,
                        sum(Nettonennleistung) as Leistung
                      from
                        EinheitWind
                      where
                        DatumEndgueltigeStilllegung != ''
                      group by
                        substr(DatumEndgueltigeStilllegung, 0, 8)
                    ),
                    months as (
                      select
                        Monat
                      from
                        per_month_started
                      union
                      select
                        Monat
                      from
                        per_month_retired
                    ),
                    per_month_cumulative as (
                      select
                        m.Monat,
                        sum(s.Leistung - r.Leistung) over (
                          order by
                            m.Monat
                        ) as Leistung,
                        s.Leistung as Leistung_neuInBetrieb,
                        r.Leistung as Leistung_stillgelegt
                      from
                        months m
                        left join per_month_started s on (m.Monat = s.Monat)
                        left join per_month_retired r on (m.Monat = r.Monat)
                    )
                    select
                      *
                    from
                      per_month_cumulative
                    where
                      Monat > '2010-00';
            BuergerenergieNachLeistung:
                title: Bürgerenergie nach Gesamtleistung
                hide_sql: true
                sql: |-
                    select
                      cast(sum(Nettonennleistung) as integer) as Leistung,
                      m.Ort,
                      m.Firmenname,
                      m.Taetigkeitsbeginn,
                      count(e.EinheitMastrNummer) as AnzahlEinheit,
                      m.MastrNummer
                    from
                      Marktakteur m
                      left join EinheitSolar e on e.AnlagenbetreiberMastrNummer = m.MastrNummer
                    where
                      m.Firmenname like "%bürger%"
                      and m.Firmenname not like "%bürgerlich%"
                    group by
                      m.MastrNummer
                    order by
                      Leistung desc

    OpenStreetMap:
        tables:
            ISO_metadata: {hidden: true}
            ISO_metadata_reference: {hidden: true}
            KNN: {hidden: true}
            SE_external_graphics: {hidden: true}
            SE_fonts: {hidden: true}
            SE_raster_styled_layers: {hidden: true}
            SE_raster_styles: {hidden: true}
            SE_vector_styled_layers: {hidden: true}
            SE_vector_styles: {hidden: true}
            data_licenses: {hidden: true}
            networks: {hidden: true}
            raster_coverages: {hidden: true}
            raster_coverages_keyword: {hidden: true}
            raster_coverages_srid: {hidden: true}
            rl2map_configurations: {hidden: true}
            sqlite_stat1: {hidden: true}
            stored_procedures: {hidden: true}
            stored_variables: {hidden: true}
            topologies: {hidden: true}
            vector_coverages: {hidden: true}
            vector_coverages_keyword: {hidden: true}
            vector_coverages_srid: {hidden: true}
            wms_getcapabilities: {hidden: true}
            wms_getmap: {hidden: true}
            wms_ref_sys: {hidden: true}
            wms_settings: {hidden: true}
        queries:
            GroessteGebaeude:
                title: Größte Gebäude
                sql: |-
                    select
                      AsGeoJSON(buildings.geometry) as geojson,
                      cast(
                        Area(Transform(buildings.geometry, 25832)) as integer
                      ) as area_sqm,
                      X(Centroid(buildings.geometry)) as longitude,
                      Y(Centroid(buildings.geometry)) as latitude
                    from
                      buildings,
                      boundaries
                    where
                      boundaries.name = :Ort
                      and buildings.rowid in (
                        select
                          rowid
                        from
                          SpatialIndex
                        where
                          f_table_name = 'buildings'
                          and search_frame = boundaries.geometry
                      )
                    order by
                      Area(Transform(buildings.geometry, 25832)) desc
                    limit
                      20
